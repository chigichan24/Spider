package net.chigita.spider

import org.intellij.lang.annotations.Language
import java.util.Locale

/**
 * A provider class that is used in ksp code generation part.
 */
class SpiderGeneratedCodeProvider {

    fun provideCustomShaderCode(specifierString: String): GeneratedShaderResult {
        val lowerCaseFileName = specifierString.lowercase(Locale.ROOT)
        val pascalCaseFileName = lowerCaseFileName
            .replaceFirstChar(Char::uppercaseChar)
        val generatedSpecificName = "Remember${pascalCaseFileName}Shader"
        @Language("kotlin")
        val code = """
                // Generated by https://github.com/chigichan24/Spider
                package net.chigita.spider
                import android.graphics.RuntimeShader
                import androidx.compose.runtime.Composable
                import androidx.compose.runtime.remember
                import androidx.compose.ui.platform.LocalContext
                import java.io.IOException
                
                @Composable
                fun ${generatedSpecificName}(): RuntimeShader {
                    val context = LocalContext.current
                    val shaderRawString = try {
                        val inputStream = context.assets.open("${lowerCaseFileName}.agsl")
                        val size = inputStream.available()
                        val buffer = ByteArray(size)
                        inputStream.read(buffer)
                        String(buffer)
                    } catch (ignore: IOException) {
                        ""
                    }
                    return remember {
                        RuntimeShader(shaderRawString)
                    }
                }
            """.trimIndent()
        return GeneratedShaderResult(generatedSpecificName, code)
    }
}
